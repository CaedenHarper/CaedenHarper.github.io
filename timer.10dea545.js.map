{"mappings":"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","sources":["src/timer/index.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- This is probably not null\nconst main_div = document.getElementById('main_div')!;\nconst celebration_emoji = String.fromCodePoint(127881);\nconst all_units = [\n    'hours',\n    'minutes',\n    'seconds',\n    'fortnights',\n    'dog_hours',\n    'usain_bolt_100_meters',\n    'pizza_hut',\n    'chopin',\n    'pills',\n    'calls',\n];\n\n// TODO: add color option\n// TODO: better documentation here\nclass Timer {\n    date: Date;\n    repeating: boolean;\n    ms: number;\n    final: string;\n    html_element: HTMLDivElement;\n    distance: number;\n    days: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n\n    constructor(date: Date, repeating: boolean, final: string, id_name: string, class_name: string) {\n        this.date = date;\n        // if the timer repeats every week once passed\n        this.repeating = repeating;\n        // ms since jan 1st 1970\n        this.ms = date.getTime();\n        // distance between date and now\n        this.distance = 0;\n\n        // final symbol to display after time is up\n        this.final = final;\n\n        // create html element\n        this.html_element = document.createElement('div');\n        this.html_element.id = id_name;\n        this.html_element.className = `noselect ${class_name}`;\n        this.html_element.textContent = '';\n        main_div.appendChild(this.html_element);\n\n        this.update(new Date().getTime());\n    }\n\n    update(current_time: number): void {\n        // amount of ms in two weeks\n        const two_weeks = 1209600000;\n\n        this.distance = this.ms - current_time;\n\n        // if timer is repeating, add two weeks until it is in the future\n        if (this.repeating) {\n            while (this.distance <= 0) {\n                this.distance += two_weeks;\n            }\n        }\n\n        // Time calculations for days, hours, minutes and seconds\n        this.days = Math.floor(this.distance / (1000 * 60 * 60 * 24));\n        this.hours = Math.floor(this.distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        this.minutes = Math.floor(this.distance % (1000 * 60 * 60) / (1000 * 60));\n        this.seconds = Math.floor(this.distance % (1000 * 60) / 1000);\n\n        this.display();\n    }\n\n    display(): void {\n        if (this.distance < 0) {\n            this.html_element.textContent = this.final;\n        } else if (this.minutes <= 0 && this.hours <= 0 && this.days <= 0) {\n            this.html_element.textContent = `${this.seconds}s `;\n        } else if (this.hours <= 0 && this.days <= 0) {\n            this.html_element.textContent = `${this.minutes}m ${this.seconds}s`;\n        } else if (this.days <= 0) {\n            this.html_element.textContent = `${this.hours}h ${this.minutes}m ${this.seconds}s`;\n        } else {\n            this.html_element.textContent = `${this.days}d ${this.hours}h ${this.minutes}m ${this.seconds}s`;\n        }\n    }\n}\n\nclass SubTimer {\n    date: Date;\n    repeating: boolean;\n    ms: number;\n    html_element: HTMLDivElement;\n    current_unit: string;\n    distance: number;\n    days: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n    full_seconds: number;\n\n    constructor(date: Date, repeating: boolean, id_name: string, class_name: string) {\n        this.date = date;\n        // if the timer repeats every week once passed\n        this.repeating = repeating;\n        // ms since jan 1st 1970\n        this.ms = date.getTime();\n        // distance between date and now\n\n        // create html element\n        this.html_element = document.createElement('div');\n        this.html_element.id = id_name;\n        this.html_element.className = `noselect ${class_name}`;\n        this.html_element.textContent = '';\n        main_div.appendChild(this.html_element);\n\n        // this.html_element.addEventListener('click', this.next_unit.bind(this));\n\n        this.html_element.addEventListener('click', () => this.next_unit());\n\n        this.current_unit = all_units[0];\n        this.update(new Date().getTime());\n    }\n\n    update(current_time: number): void {\n        // amount of ms in two weeks\n        const two_weeks = 1209600000;\n\n        this.distance = this.ms - current_time;\n\n        // if timer is repeating, add two weeks until it is in the future\n        // TODO: make this happen once instead of per update\n        if (this.repeating) {\n            while (this.distance <= 0) {\n                this.distance += two_weeks;\n            }\n        }\n\n        // Time calculations for days, hours, minutes and seconds\n        this.days = Math.floor(this.distance / (1000 * 60 * 60 * 24));\n        this.hours = Math.floor(this.distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        this.minutes = Math.floor(this.distance % (1000 * 60 * 60) / (1000 * 60));\n        this.seconds = Math.floor(this.distance % (1000 * 60) / 1000);\n        // full seconds used for some display functions\n        this.full_seconds = this.days * 24 * 60 * 60 + this.hours * 60 * 60 + this.minutes * 60 + this.seconds;\n\n        this.current_unit_display();\n    }\n\n    // TODO: refactor each of these display functions\n    display_hours(): void {\n        const full_hours = this.days * 24 + this.hours;\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${full_hours} hours)`;\n        }\n    }\n\n    display_minutes(): void {\n        const full_minutes = this.days * 24 * 60 + this.hours * 60 + this.minutes;\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${full_minutes} minutes)`;\n        }\n    }\n\n    display_seconds(): void {\n        if (this.distance < 0) {\n            this.html_element.textContent = '0 seconds';\n        } else {\n            this.html_element.textContent = `(${this.full_seconds} seconds)`;\n        }\n    }\n\n    display_fortnights(): void {\n        // fortnight = 2 weeks = 14 days = 1,210,000 seconds\n        const fortnight_constant = 1210000;\n        const num_fortnights = (this.full_seconds / (1.0 * fortnight_constant)).toFixed(1);\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_fortnights} fortnights)`;\n        }\n    }\n\n    display_dog_hours(): void {\n        const num_dog_seconds = this.full_seconds * 7;\n        const num_dog_hours = Math.round(num_dog_seconds / (60 * 60));\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_dog_hours} dog hours)`;\n        }\n    }\n\n    display_usain_bolt_100_meters(): void {\n        const num_usain_bolt = Math.round(this.full_seconds / 9.58);\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_usain_bolt} Usain Bolt 100 meters)`;\n        }\n    }\n\n    display_pizza_hut(): void {\n        const num_pizza_hut = Math.round(this.full_seconds / (15 * 60));\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_pizza_hut} Pizza Hut orders)`;\n        }\n    }\n\n    display_chopin(): void {\n        const num_chopin_hours = Math.round(2 * (this.full_seconds / (60 * 60)));\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_chopin_hours} Chopin hours)`;\n        }\n    }\n\n    display_pills(): void {\n        const num_pills = Math.round(16 * (this.full_seconds / 86400));\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_pills} pills)`;\n        }\n    }\n\n    display_calls(): void {\n        // each call is about 13.5 minutes\n        const num_calls = Math.round(this.full_seconds / 60 / 13.5);\n        if (this.distance < 0) {\n            this.html_element.textContent = '';\n        } else {\n            this.html_element.textContent = `(${num_calls} calls)`;\n        }\n    }\n\n    // TODO: refactor\n    current_unit_display(): void {\n        switch (this.current_unit) {\n            case 'hours':\n                this.display_hours();\n                break;\n            case 'minutes':\n                this.display_minutes();\n                break;\n            case 'seconds':\n                this.display_seconds();\n                break;\n            case 'fortnights':\n                this.display_fortnights();\n                break;\n            case 'dog_hours':\n                this.display_dog_hours();\n                break;\n            case 'usain_bolt_100_meters':\n                this.display_usain_bolt_100_meters();\n                break;\n            case 'pizza_hut':\n                this.display_pizza_hut();\n                break;\n            case 'chopin':\n                this.display_chopin();\n                break;\n            case 'pills':\n                this.display_pills();\n                break;\n            case 'calls':\n                this.display_calls();\n                break;\n            default:\n                this.display_hours();\n                break;\n        }\n    }\n\n    next_unit(): void {\n        const index = all_units.indexOf(this.current_unit);\n        if (index === -1) {\n            this.current_unit = 'hours';\n            this.current_unit_display();\n            return;\n        }\n\n        this.current_unit = all_units[(index + 1) % all_units.length];\n        this.current_unit_display();\n    }\n}\n\nconst timers: (Timer | SubTimer)[] = [];\n\nconst countDownDate = new Date('Jun 13, 2025 17:00:00');\nconst countDownTimer = new Timer(countDownDate, false, celebration_emoji, 'countdown', '');\nconst countDownSubTimer = new SubTimer(countDownDate, false, 'countdownsub', '');\ntimers.push(countDownTimer, countDownSubTimer);\n\n// Every Wednesday\nconst payCheckDate = new Date('Feb 14, 2024 06:00:00');\nconst payCheckTimer = new Timer(payCheckDate, true, '', 'paycheck', 'pay');\nconst payCheckSubTimer = new SubTimer(payCheckDate, true, 'paychecksub', 'pay');\ntimers.push(payCheckTimer, payCheckSubTimer);\n\n// const gradDate = new Date('May 17, 2024 00:00:00');\n// const gradDateTimer = new Timer(gradDate, false, '', 'graddate', 'grad');\n// const gradDateSubTimer = new SubTimer(gradDate, false, 'graddatesub', 'grad');\n// timers.push(gradDateTimer, gradDateSubTimer);\n\nfunction main(): void {\n    const current_time = new Date().getTime();\n\n    for (const timer of timers) {\n        timer.update(current_time);\n    }\n}\n\nsetInterval(main, 1000);\n"],"names":[],"version":3,"file":"timer.10dea545.js.map","sourceRoot":"/__parcel_source_root/"}