{"mappings":"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","sources":["src/quota/index.js"],"sourcesContent":["// initialize constants\n// divs\nconst previous_quota_div = document.getElementById('previous-quota');\nconst quota_num_div = document.getElementById('quota-num');\nconst current_quota_div = document.getElementById('current-quota');\nconst lowest_quota_div = document.getElementById('lowest-next-quota');\nconst average_quota_div = document.getElementById('average-next-quota');\nconst highest_quota_div = document.getElementById('highest-next-quota');\nconst percentile_div = document.getElementById('percentile');\nconst lowest_quota_num_div = document.getElementById('lowest-quota-num');\nconst highest_quota_num_div = document.getElementById('highest-quota-num');\n\nfunction next_quota(previous_quota, quota_num, random_variance) {\n    return Math.trunc(\n        previous_quota + 100 * (1 + ((quota_num - 1) ** 2) / 16) * (random_variance + 1),\n    );\n}\n\nfunction lowest_next_quota(previous_quota, quota_num) {\n    return next_quota(previous_quota, quota_num, -0.5);\n}\n\nfunction highest_next_quota(previous_quota, quota_num) {\n    return next_quota(previous_quota, quota_num, 0.5);\n}\n\nfunction average_next_quota(previous_quota, quota_num) {\n    return next_quota(previous_quota, quota_num, 0);\n}\n\nfunction quota_to_percentile(quota, previous_quota, quota_num) {\n    return ((quota - previous_quota) / (100 * (1 + ((quota_num - 1) ** 2) / 16))) - 0.5;\n}\n\nfunction find_quota_range(goal_quota) {\n    // the first quota is always 130\n    let min_quota = 130;\n    let max_quota = 130;\n    let quota_num = 1;\n    let lower_bound;\n    let upper_bound;\n    while (lower_bound === undefined || upper_bound === undefined) {\n        if (lower_bound === undefined && max_quota >= goal_quota) {\n            lower_bound = quota_num;\n        }\n\n        if (upper_bound === undefined && min_quota > goal_quota) {\n            upper_bound = quota_num - 1;\n        }\n\n        quota_num += 1;\n        min_quota = lowest_next_quota(min_quota, quota_num);\n        max_quota = highest_next_quota(max_quota, quota_num);\n    }\n\n    return { low: Math.trunc(lower_bound), high: Math.trunc(upper_bound) };\n}\n\nfunction clean_divs() {\n    // clear text divs\n    lowest_quota_div.textContent = 'Lowest Next: ';\n    average_quota_div.textContent = 'Average Next: ';\n    highest_quota_div.textContent = 'Highest Next: ';\n    percentile_div.textContent = 'Percentile: ';\n    lowest_quota_num_div.textContent = 'Quota Num Lower Bound: ';\n    highest_quota_num_div.textContent = 'Quota Num Upper Bound: ';\n}\n\nfunction draw_screen() {\n    clean_divs();\n\n    const previous_quota = Number(previous_quota_div.value);\n    const quota_num = Number(quota_num_div.value);\n    const current_quota = Number(current_quota_div.value);\n\n    const lowest = lowest_next_quota(previous_quota, quota_num);\n    const highest = highest_next_quota(previous_quota, quota_num);\n    lowest_quota_div.textContent += lowest;\n    average_quota_div.textContent += average_next_quota(previous_quota, quota_num);\n    highest_quota_div.textContent += highest;\n\n    const percentile = quota_to_percentile(current_quota, previous_quota, quota_num);\n    const p_impossible = current_quota < lowest || current_quota > highest;\n    percentile_div.textContent += p_impossible ? 'Impossible' : `${Math.round(100 * percentile)}%`;\n\n    const bounds = find_quota_range(current_quota);\n    const impossible = current_quota < lowest;\n    lowest_quota_num_div.textContent += impossible ? 'Impossible' : bounds.low;\n    highest_quota_num_div.textContent += impossible ? 'Impossible' : bounds.high;\n}\n\nfunction main() {\n    // add draw screen event listeners\n    previous_quota_div.addEventListener('input', () => draw_screen());\n    quota_num_div.addEventListener('input', () => draw_screen());\n    current_quota_div.addEventListener('input', () => draw_screen());\n\n    // draw the screen once\n    draw_screen();\n}\n\nmain();\n"],"names":[],"version":3,"file":"quota.e4b270dd.js.map","sourceRoot":"/__parcel_source_root/"}